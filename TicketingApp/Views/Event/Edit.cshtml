@model TicketingApp.Models.Event;
@{
    ViewData["Title"] = "Create Event";
}

<div id="errorMessage"></div>

<h1>Create Event</h1>

<form hx-post="/event/create" hx-target-error="#errorMessage">
    <div class="input-group mb-3">
        <span class="input-group-text" id="eventName">Event Name</span>
        <input type="text" name="Name" class="form-control" aria-label="Event Name" aria-describedby="Event Name"
            value="@Html.ValueFor(model => model.Name)">
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">Description</span>
        <textarea class="form-control" name="Description"
            aria-label="Description">@Html.DisplayFor(model => model.Description)</textarea>
    </div>

    @{

        var localDateTime = TimeZoneInfo.ConvertTimeFromUtc(Model.Date, TimeZoneInfo.Local).ToString("yyyy-MM-dd HH:mm:ss");
        <div class="input-group mb-3">
            <label class="input-group-text">Event Date</label>
            <input required class="form-control" name="Date" placeholder="Pick a date" id="datePicker"
                value="@localDateTime" />
        </div>
    }

    <div class="input-group mb-3">
        <span class="input-group-text" id="category">Category</span>
        <input type="text" name="Category" class="form-control" aria-label="Category" aria-describedby="Category"
            value="@Html.ValueFor(model => model.Category)">
    </div>

    <div class="mb-3">
        <div class="input-group mb-3">
            <span class="input-group-text">Artist Search</span>
            <input type="text" id="artist-search-input" class="form-control" aria-label="Event Name">
            <button type="button" hx-post='/artist/search?template=ArtistListSelect' hx-target="#artistSelectList"
                hx-trigger="load" hx-swap="innerHTML" class="btn btn-success">Search</button>
        </div>
        <div id="artistSelectList"></div>
    </div>

    <div class="mb-3">
        <div class="input-group mb-3">
            <span class="input-group-text">Venue Search</span>
            <input type="text" id="venue-search-input" class="form-control" aria-label="Venue Name">
            <button type="button" hx-post='/venue/search?template=VenueListSelect' hx-target="#venueSelectList"
                hx-swap="innerHTML" class="btn btn-success">Search</button>
        </div>
        <div id="venueSelectList"></div>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</form>



<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    const datePicker = document.getElementById("datePicker");
    flatpickr(datePicker, {
        enableTime: true,
        dateFormat: "Y-m-d H:i",
    });

    document.body.addEventListener('htmx:configRequest', function (evt) {

        if (evt.detail.path === '/artist/search?template=ArtistListSelect') {
            const searchInput = document.getElementById('artist-search-input').value
            evt.detail.path += `&searchInput=${searchInput}`
            return;
        }

        if (evt.detail.path === '/venue/search?template=VenueListSelect') {
            const searchInput = document.getElementById('venue-search-input').value
            evt.detail.path += `&searchInput=${searchInput}`
            return;
        }

        if (evt.detail.path === '/event/create') {
            const artistId = document.getElementsByClassName("artist-select-ele active")[0]?.dataset.artistid || 0;
            const venueId = document.getElementsByClassName("venue-select-ele active")[0]?.dataset.venueid || 0;

            const dateStr = evt.detail.parameters["Date"]

            evt.detail.parameters = {
                ...evt.detail.parameters,
                Date: dateStr && new Date(dateStr).toISOString(),
                ArtistId: artistId,
                VenueId: venueId,
            }
        }
    });
</script>

@model TicketingApp.Models.BookingViewModel;

<div class"container">
    <div class="py-5 text-center">
        <h1>Checkout</h1>
    </div>
</div>

<div class="container">
    <div class="row">

        <div class="col-md-4 order-2">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class=text-muted>Your Cart</span>
                <span class="badge rounded-pill bg-secondary">@Html.DisplayFor(model =>
                    model.Booking.Tickets.Count)</span>
            </h4>

            @foreach (var ticket in Model.Booking.Tickets)
            {
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">@ticket.Event.Name</h6>
                        <small class="text-muted">@ticket.Event.Venue.Name - @ticket.Event.Artist.Name</small>
                    </div>
                    <span class="text-muted">$8</span>
                </li>
            }

            <div class="card-footer d-flex justify-content-between">
                <span>Total (USD)</span>
                <strong>$20</strong>
            </div>

        </div>

        <div class="col-md-8 order-1">
            <form id="payment-form" data-secret="@Html.ValueFor(model => model.StripeClientSecret)">
                <div class="my-3" id="payment-element">
                    <!-- Elements will create form elements here -->
                </div>

                <div class="my-3" id="address-element">
                    <!-- Elements will create form elements here -->
                </div>

                <button class="btn btn-primary" id="submit">Submit</button>
                <div id="error-message">
                    <!-- Display error message to your customers here -->
                </div>
            </form>
        </div>
    </div>
</div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>

    // Render stripe payment form
    const stripe = Stripe("@Html.ValueFor(model => model.StripePublicKey)");

    const options = {
        clientSecret: "@Html.ValueFor(model => model.StripeClientSecret)",
        appearance: {},
    }

    const elements = stripe.elements(options);

    const paymentElement = elements.create("payment");
    paymentElement.mount("#payment-element");

    const addressElement = elements.create('address', { mode: 'billing' });
    addressElement.mount('#address-element');

    //

    // Process payment
    const form = document.getElementById("payment-form");
    form.addEventListener("submit", async (event) => {
        event.preventDefault();

        const { error } = await stripe.confirmPayment({
            elements,
            confirmParams: {
                return_url: "https://127.0.0.1:5112"
            }
        })

        if (error) {
            const msgContainer = document.querySelector("#errorMessage");
            msgContainer.textContent = error.message;
        }
    })

</script>